/* cSpell:ignore descripcion codigo categoria
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main.java.com.Gym360.view.admin.inventory;

import java.awt.Toolkit;
import java.util.List;

import javax.swing.JOptionPane;

import main.java.com.Gym360.controller.Verificar;
import main.java.com.Gym360.model.classes.DetalleCompra;
import main.java.com.Gym360.model.classes.InventarioCompra;
import main.java.com.Gym360.model.classes.Producto;
import main.java.com.Gym360.model.dao.DetalleCompraDAO;
import main.java.com.Gym360.model.dao.InventarioComprasDAO;
import main.java.com.Gym360.model.dao.ProductoDAO;
import main.java.com.Gym360.model.security.VerificarCampo;
import main.java.com.Gym360.util.ui.CambiarIU;
import main.java.com.Gym360.util.ui.ObtenerIU;

/**
 *
 * @author tutaa
 */
public class CreateCompra extends javax.swing.JFrame {

        /**
         * Creates new form ManageUsersScreen
         */
        public CreateCompra() {
                initComponents();
                this.setTitle("Registrar Compra");
                this.setResizable(false);
                this.setLocationRelativeTo(null);
                this.setIconImage(Toolkit.getDefaultToolkit()
                                .getImage(getClass().getResource("/main/resources/images/logo.png")));
                ponerProductosCombo();
                ponerTotal();
                mostrarErrores();
                btnCrearCompra.setEnabled(datosValidos());
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                panelCrearCompra = new javax.swing.JPanel();
                pMenu = new javax.swing.JPanel();
                lbBackButton = new javax.swing.JLabel();
                lbEditarCompra = new javax.swing.JLabel();
                lbProducto = new javax.swing.JLabel();
                cbProducto = new javax.swing.JComboBox<>();
                imgValidarProducto = new javax.swing.JLabel();
                lbDescripción = new javax.swing.JLabel();
                spDescripcion = new javax.swing.JScrollPane();
                taDescripcion = new javax.swing.JTextArea();
                lbCantidad = new javax.swing.JLabel();
                tfCantidad = new javax.swing.JTextField();
                imgValidarCantidad = new javax.swing.JLabel();
                lbPrecioUnitario = new javax.swing.JLabel();
                tfPrecioUnitario = new javax.swing.JTextField();
                imgValidarPrecioUnitario = new javax.swing.JLabel();
                lbFecha = new javax.swing.JLabel();
                tfFechaCompra = new javax.swing.JTextField();
                imgValidarFecha = new javax.swing.JLabel();
                lbTotal = new javax.swing.JLabel();
                lbPonerTotal = new javax.swing.JLabel();
                imgCrearCompra = new javax.swing.JLabel();
                btnCrearCompra = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                panelCrearCompra.setBackground(new java.awt.Color(245, 245, 245));
                panelCrearCompra.setMaximumSize(new java.awt.Dimension(1467, 800));
                panelCrearCompra.setMinimumSize(new java.awt.Dimension(1467, 800));
                panelCrearCompra.setPreferredSize(new java.awt.Dimension(1467, 800));
                panelCrearCompra.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                pMenu.setBackground(new java.awt.Color(93, 0, 0));
                pMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                lbBackButton.setIcon(
                                new javax.swing.ImageIcon(getClass().getResource("/main/resources/images/back.png"))); // NOI18N
                lbBackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lbBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                lbBackButtonMouseClicked(evt);
                        }
                });
                pMenu.add(lbBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 40));

                lbEditarCompra.setBackground(new java.awt.Color(0, 0, 0));
                lbEditarCompra.setFont(new java.awt.Font("Inter", 1, 36)); // NOI18N
                lbEditarCompra.setForeground(new java.awt.Color(245, 245, 245));
                lbEditarCompra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                lbEditarCompra.setText("REGISTRAR COMPRA");
                lbEditarCompra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                pMenu.add(lbEditarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 60));

                panelCrearCompra.add(pMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 60));

                lbProducto.setBackground(new java.awt.Color(0, 0, 0));
                lbProducto.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
                lbProducto.setForeground(new java.awt.Color(20, 20, 20));
                lbProducto.setText("Producto:");
                panelCrearCompra.add(lbProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, 40));

                cbProducto.setBackground(new java.awt.Color(231, 231, 231));
                cbProducto.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
                cbProducto.setForeground(new java.awt.Color(20, 20, 20));
                cbProducto.setModel(new javax.swing.DefaultComboBoxModel<>(
                                new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
                cbProducto.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cbProductoActionPerformed(evt);
                        }
                });
                panelCrearCompra.add(cbProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 280, 40));

                imgValidarProducto.setIcon(
                                new javax.swing.ImageIcon(getClass().getResource("/main/resources/images/error.png"))); // NOI18N
                panelCrearCompra.add(imgValidarProducto,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, 30, 30));

                lbDescripción.setBackground(new java.awt.Color(0, 0, 0));
                lbDescripción.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
                lbDescripción.setForeground(new java.awt.Color(20, 20, 20));
                lbDescripción.setText("Descripción:");
                panelCrearCompra.add(lbDescripción, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, 40));

                taDescripcion.setBackground(new java.awt.Color(231, 231, 231));
                taDescripcion.setColumns(20);
                taDescripcion.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
                taDescripcion.setForeground(new java.awt.Color(20, 20, 20));
                taDescripcion.setLineWrap(true);
                taDescripcion.setRows(5);
                spDescripcion.setViewportView(taDescripcion);

                panelCrearCompra.add(spDescripcion,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, 280, -1));

                lbCantidad.setBackground(new java.awt.Color(0, 0, 0));
                lbCantidad.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
                lbCantidad.setForeground(new java.awt.Color(20, 20, 20));
                lbCantidad.setText("Cantidad:");
                panelCrearCompra.add(lbCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, -1, 40));

                tfCantidad.setBackground(new java.awt.Color(231, 231, 231));
                tfCantidad.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
                tfCantidad.setForeground(new java.awt.Color(20, 20, 20));
                tfCantidad.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                tfCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                tfCantidadKeyReleased(evt);
                        }
                });
                panelCrearCompra.add(tfCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 280, 40));

                imgValidarCantidad.setIcon(
                                new javax.swing.ImageIcon(getClass().getResource("/main/resources/images/error.png"))); // NOI18N
                panelCrearCompra.add(imgValidarCantidad,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, 30, 30));

                lbPrecioUnitario.setBackground(new java.awt.Color(0, 0, 0));
                lbPrecioUnitario.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
                lbPrecioUnitario.setForeground(new java.awt.Color(20, 20, 20));
                lbPrecioUnitario.setText("Precio Unitario:");
                panelCrearCompra.add(lbPrecioUnitario,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, -1, 40));

                tfPrecioUnitario.setBackground(new java.awt.Color(231, 231, 231));
                tfPrecioUnitario.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
                tfPrecioUnitario.setForeground(new java.awt.Color(20, 20, 20));
                tfPrecioUnitario.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                tfPrecioUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                tfPrecioUnitarioKeyReleased(evt);
                        }
                });
                panelCrearCompra.add(tfPrecioUnitario,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 430, 280, 40));

                imgValidarPrecioUnitario.setIcon(
                                new javax.swing.ImageIcon(getClass().getResource("/main/resources/images/error.png"))); // NOI18N
                panelCrearCompra.add(imgValidarPrecioUnitario,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 430, 30, 30));

                lbFecha.setBackground(new java.awt.Color(0, 0, 0));
                lbFecha.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
                lbFecha.setForeground(new java.awt.Color(20, 20, 20));
                lbFecha.setText("Fecha Compra:");
                panelCrearCompra.add(lbFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 510, -1, 40));

                tfFechaCompra.setBackground(new java.awt.Color(231, 231, 231));
                tfFechaCompra.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
                tfFechaCompra.setForeground(new java.awt.Color(20, 20, 20));
                tfFechaCompra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                tfFechaCompra.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                tfFechaCompraKeyReleased(evt);
                        }
                });
                panelCrearCompra.add(tfFechaCompra,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 510, 280, 40));

                imgValidarFecha.setIcon(
                                new javax.swing.ImageIcon(getClass().getResource("/main/resources/images/error.png"))); // NOI18N
                panelCrearCompra.add(imgValidarFecha,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 510, 30, 30));

                lbTotal.setBackground(new java.awt.Color(0, 0, 0));
                lbTotal.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
                lbTotal.setForeground(new java.awt.Color(20, 20, 20));
                lbTotal.setText("Total:");
                panelCrearCompra.add(lbTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 580, -1, 40));

                lbPonerTotal.setBackground(new java.awt.Color(0, 0, 0));
                lbPonerTotal.setFont(new java.awt.Font("Inter", 0, 24)); // NOI18N
                lbPonerTotal.setForeground(new java.awt.Color(20, 20, 20));
                lbPonerTotal.setText("$");
                panelCrearCompra.add(lbPonerTotal,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 580, 280, 40));

                imgCrearCompra.setIcon(
                                new javax.swing.ImageIcon(getClass().getResource("/main/resources/images/plus.png"))); // NOI18N
                panelCrearCompra.add(imgCrearCompra,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 700, 40, 60));

                btnCrearCompra.setBackground(new java.awt.Color(93, 0, 0));
                btnCrearCompra.setFont(new java.awt.Font("Inter", 1, 18)); // NOI18N
                btnCrearCompra.setForeground(new java.awt.Color(200, 200, 200));
                btnCrearCompra.setText("      Registrar Compra");
                btnCrearCompra.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                btnCrearCompra.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnCrearCompraActionPerformed(evt);
                        }
                });
                panelCrearCompra.add(btnCrearCompra,
                                new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 700, 300, 60));

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(panelCrearCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 675,
                                                javax.swing.GroupLayout.PREFERRED_SIZE));
                layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(panelCrearCompra, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void cbProductoActionPerformed(java.awt.event.ActionEvent evt) {
                mostrarErrores();
                ponerDescripcionProducto();
                btnCrearCompra.setEnabled(datosValidos());
        }

        private void tfFechaCompraKeyReleased(java.awt.event.KeyEvent evt) {
                mostrarErrores();
                btnCrearCompra.setEnabled(datosValidos());
        }

        private void tfCantidadKeyReleased(java.awt.event.KeyEvent evt) {
                ponerTotal();
                mostrarErrores();
                btnCrearCompra.setEnabled(datosValidos());
        }

        private void tfPrecioUnitarioKeyReleased(java.awt.event.KeyEvent evt) {
                ponerTotal();
                mostrarErrores();
                btnCrearCompra.setEnabled(datosValidos());
        }

        private void btnCrearCompraActionPerformed(java.awt.event.ActionEvent evt) {
                registrarCompra();
                ManageInventoryScreen mi = new ManageInventoryScreen();
                mi.setVisible(true);
                this.setVisible(false);
        }

        private void lbBackButtonMouseClicked(java.awt.event.MouseEvent evt) {

                ManageInventoryScreen mi = new ManageInventoryScreen();
                mi.setVisible(true);
                this.setVisible(false);
        }

        private void ponerDescripcionProducto() {
                try {

                        String[] datosProductoSeleccionado = ObtenerIU.obtenerSeleccionCombo(cbProducto).split("-");

                        int idProducto = Integer.parseInt(datosProductoSeleccionado[0].trim());

                        ProductoDAO productoDAO = new ProductoDAO();
                        Producto producto = productoDAO.obtenerPorId(idProducto);

                        CambiarIU.ponerTextoArea(taDescripcion, producto.getDescripcion());
                } catch (Exception e) {
                }
                {
                }
        }

        private void ponerTotal() {
                String cantidadStr = ObtenerIU.obtenerTextoCampo(tfCantidad).trim();
                String precioStr = ObtenerIU.obtenerTextoCampo(tfPrecioUnitario).trim();

                if (!cantidadStr.isEmpty() && !precioStr.isEmpty()) {
                        try {
                                double cantidad = Double.parseDouble(cantidadStr);
                                double precio = Double.parseDouble(precioStr);
                                double total = cantidad * precio;
                                CambiarIU.ponerTextoEtiqueta(lbPonerTotal, String.valueOf(total));
                        } catch (NumberFormatException e) {

                                CambiarIU.ponerTextoEtiqueta(lbPonerTotal, "Error: valor no numérico");
                        }
                } else {
                        CambiarIU.ponerTextoEtiqueta(lbPonerTotal, "Error: campo vacío");
                }

        }

        private void ponerProductosCombo() {
                ProductoDAO productoDAO = new ProductoDAO();

                List<Producto> productos = productoDAO.obtenerTodos();

                CambiarIU.vaciarCombo(cbProducto);
                for (Producto p : productos) {
                        cbProducto.addItem(String.format("%d - %s", p.getIdProducto(), p.getNombre()));

                }

        }

        private boolean datosValidos() {
                return Verificar.validarPrecio((ObtenerIU.obtenerTextoCampo(tfPrecioUnitario)))
                                && Verificar.validarStock((ObtenerIU.obtenerTextoCampo(tfCantidad)))
                                && Verificar.validarComboBox(ObtenerIU.obtenerSeleccionCombo(cbProducto))
                                && Verificar.validarFechaMenorIgualHoy(ObtenerIU.obtenerTextoCampo(tfFechaCompra));
        }

        private void mostrarErrores() {
                // tfPrecioUnitario
                VerificarCampo.verificarCampo(Verificar.validarPrecio(ObtenerIU.obtenerTextoCampo(tfPrecioUnitario)),
                                imgValidarPrecioUnitario, "El precio unitario es válido.",
                                "El precio unitario no es válido.");

                // tfCantidad
                VerificarCampo.verificarCampo(Verificar.validarStock(ObtenerIU.obtenerTextoCampo(tfCantidad)),
                                imgValidarCantidad, "La cantidad es válida.", "La cantidad no es válida.");

                // cbProducto
                VerificarCampo.verificarCampo(Verificar.validarComboBox(ObtenerIU.obtenerSeleccionCombo(cbProducto)),
                                imgValidarProducto, "Ha seleccionado un producto.", "Debe seleccionar un producto.");

                // tfFechaCompra
                VerificarCampo.verificarCampo(
                                Verificar.validarFechaMenorIgualHoy(ObtenerIU.obtenerTextoCampo(tfFechaCompra)),
                                imgValidarFecha, "La fecha de compra es válida.",
                                "La fecha de compra no puede ser posterior a hoy.");
        }

        private void registrarCompra() {

                try {
                        String[] datosProductoSeleccionado = ObtenerIU.obtenerSeleccionCombo(cbProducto).split("-");

                        int idProducto = Integer.parseInt(datosProductoSeleccionado[0].trim());

                        int cantidad = Integer.parseInt(ObtenerIU.obtenerTextoCampo(tfCantidad));

                        double precio = Double.parseDouble(ObtenerIU.obtenerTextoCampo(tfPrecioUnitario));

                        String fecha = ObtenerIU.obtenerTextoCampo(tfFechaCompra);

                        double total = Double.parseDouble(ObtenerIU.obtenerTextoEtiqueta(lbPonerTotal));

                        InventarioComprasDAO invDao = new InventarioComprasDAO();
                        InventarioCompra invCom = new InventarioCompra(0, fecha, total);
                        invDao.insertar(invCom);

                        var compras = invDao.obtenerTodos();

                        var ultimaCompra = compras.get(compras.size() - 1);

                        DetalleCompraDAO detalleComDao = new DetalleCompraDAO();

                        DetalleCompra detalleCom = new DetalleCompra(0, ultimaCompra.getIdCompra(), idProducto,
                                        cantidad, precio);
                        detalleComDao.insertar(detalleCom);

                        JOptionPane.showMessageDialog(this, "La compra se registró correctamente.",
                                        "Actualización exitosa", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error al registrar la Compra." + e.toString(),
                                        "Error", JOptionPane.ERROR_MESSAGE);
                }

        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnCrearCompra;
        private javax.swing.JComboBox<String> cbProducto;
        private javax.swing.JLabel imgCrearCompra;
        private javax.swing.JLabel imgValidarCantidad;
        private javax.swing.JLabel imgValidarFecha;
        private javax.swing.JLabel imgValidarPrecioUnitario;
        private javax.swing.JLabel imgValidarProducto;
        private javax.swing.JLabel lbBackButton;
        private javax.swing.JLabel lbCantidad;
        private javax.swing.JLabel lbDescripción;
        private javax.swing.JLabel lbEditarCompra;
        private javax.swing.JLabel lbFecha;
        private javax.swing.JLabel lbPonerTotal;
        private javax.swing.JLabel lbPrecioUnitario;
        private javax.swing.JLabel lbProducto;
        private javax.swing.JLabel lbTotal;
        private javax.swing.JPanel pMenu;
        private javax.swing.JPanel panelCrearCompra;
        private javax.swing.JScrollPane spDescripcion;
        private javax.swing.JTextArea taDescripcion;
        private javax.swing.JTextField tfCantidad;
        private javax.swing.JTextField tfFechaCompra;
        private javax.swing.JTextField tfPrecioUnitario;
        // End of variables declaration//GEN-END:variables
}
